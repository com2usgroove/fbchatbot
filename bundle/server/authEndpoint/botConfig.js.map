{"version":3,"sources":["../../../server/authEndpoint/botConfig.js"],"names":["init","app","dh","get","req","res","getAccessToken","then","access_token_mgr","page_access_token","PAGE_ACCESS_TOKEN_KEY","uri","GRAPH_BASE_URL","qs","bodyobj","info","JSON","stringify","data_array","default_greeting","greeting","find","g","locale","status","send","text","catch","err","error","post","json","body","sendStatus"],"mappings":";;;;;QAIgBA,I,GAAAA,I;;AAJhB;;;;AACA;;;;AACA;;;;;;AAEO,SAASA,IAAT,CAAcC,GAAd,EAAmBC,EAAnB,EAAuB;;AAE5BD,MAAIE,GAAJ,CAAQ,iBAAR,EAA2B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvCH,OAAGI,cAAH,GACGC,IADH,CACQ,UAACC,gBAAD,EAAsB;AAC1B,UAAIC,oBAAoBD,iBAAiBL,GAAjB,CAAqB,mBAASO,qBAA9B,CAAxB;AACA,aAAO,oBAAUP,GAAV,CAAc;AACnBQ,aAAQ,mBAASC,cAAjB,0BADmB;AAEnBC,YAAI;AACF,0BAAgBJ,iBADd;AAEF,oBAAU;AAFR;AAFe,OAAd,CAAP;AAOD,KAVH,EAWGF,IAXH,CAWQ,UAACO,OAAD,EAAa;AACjB,uBAAOC,IAAP,kCAA2CC,KAAKC,SAAL,CAAeH,OAAf,CAA3C;AADiB,UAEHI,UAFG,GAEYJ,OAFZ,CAEX,MAFW;;AAGjB,UAAIK,mBAAoBD,WAAW,CAAX,EAAcE,QAAf,CAAyBC,IAAzB,CAA8B,UAACC,CAAD,EAAO;AAAE,eAAOA,EAAEC,MAAF,KAAa,SAApB;AAAgC,OAAvE,CAAvB;AACAlB,UAAImB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBN,iBAAiBO,IAAtC;AACD,KAhBH,EAiBGC,KAjBH,CAiBS,UAACC,GAAD,EAAS;AACd,uBAAOC,KAAP,6CAAuDb,KAAKC,SAAL,CAAeW,GAAf,CAAvD;AACAvB,UAAImB,MAAJ,CAAW,GAAX;AACD,KApBH;AAqBD,GAtBD;;AAwBAvB,MAAI6B,IAAJ,CAAS,iBAAT,EAA4B,UAAC1B,GAAD,EAAMC,GAAN,EAAc;AACxCH,OAAGI,cAAH,GAAoBC,IAApB,CACE,UAACC,gBAAD,EAAsB;AACpB,UAAIC,oBAAoBD,iBAAiBL,GAAjB,CAAqB,mBAASO,qBAA9B,CAAxB;AACA,0BAAUoB,IAAV,CAAe;AACbnB,aAAQ,mBAASC,cAAjB,0BADa;AAEbmB,cAAM;AACJ,0BAAgBtB,iBADZ;AAEJ,sBAAY,CACV;AACE,sBAAU,SADZ;AAEE,oBAAQL,IAAI4B,IAAJ,CAASN;AAFnB,WADU,CAFR;AAQJ,yBAAe;AACb,uBAAU;AADG;AARX;AAFO,OAAf,EAeCnB,IAfD,CAeM,YAAM;AACV,yBAAOQ,IAAP,CAAY,yBAAZ;AACAV,YAAI4B,UAAJ,CAAe,GAAf;AACD,OAlBD,EAmBCN,KAnBD,CAmBO,UAACC,GAAD,EAAS;AACd,yBAAOC,KAAP,6CAAuDb,KAAKC,SAAL,CAAeW,GAAf,CAAvD;AACAvB,YAAImB,MAAJ,CAAW,GAAX;AACD,OAtBD;AAuBD,KA1BH;AA2BD,GA5BD;AA8BD","file":"botConfig.js","sourcesContent":["import constant from 'common/constant';\nimport logger from 'common/logger';\nimport fbrequest from 'common/fbrequest';\n\nexport function init(app, dh) {\n\n  app.get('/welcome_screen', (req, res) => {\n    dh.getAccessToken()\n      .then((access_token_mgr) => {\n        let page_access_token = access_token_mgr.get(constant.PAGE_ACCESS_TOKEN_KEY);\n        return fbrequest.get({\n          uri: `${constant.GRAPH_BASE_URL}/me/messenger_profile`,\n          qs: {\n            'access_token': page_access_token,\n            'fields': 'greeting',\n          },\n        });\n      })\n      .then((bodyobj) => {\n        logger.info(`Got Welcome Screen Text as: ${JSON.stringify(bodyobj)}`);\n        let { 'data': data_array } = bodyobj;\n        let default_greeting = (data_array[0].greeting).find((g) => { return g.locale === 'default'; });\n        res.status(200).send(default_greeting.text);\n      })\n      .catch((err) => {\n        logger.error(`Oops, Facebook API request failed with ${JSON.stringify(err)}`);\n        res.status(500);\n      });\n  });\n\n  app.post('/welcome_screen', (req, res) => {\n    dh.getAccessToken().then(\n      (access_token_mgr) => {\n        let page_access_token = access_token_mgr.get(constant.PAGE_ACCESS_TOKEN_KEY);\n        fbrequest.post({\n          uri: `${constant.GRAPH_BASE_URL}/me/messenger_profile`,\n          json: {\n            'access_token': page_access_token,\n            'greeting': [\n              {\n                'locale': 'default',\n                'text': req.body.text,\n              },\n            ],\n            'get_started': {\n              'payload':'GET_STARTED'\n            },\n          },\n        })\n        .then(() => {\n          logger.info('Set Welcome Screen Text');\n          res.sendStatus(200);\n        })\n        .catch((err) => {\n          logger.error(`Oops, Facebook API request failed with ${JSON.stringify(err)}`);\n          res.status(500);\n        });\n      });\n  });\n\n}\n"]}