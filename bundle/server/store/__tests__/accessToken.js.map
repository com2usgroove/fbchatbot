{"version":3,"sources":["../../../../server/store/__tests__/accessToken.js"],"names":["jest","mock","REDISCLOUD_URL","LOCAL_FILE_STORE_PATH","beforeAll","ensureDirSync","test","thedh","theatmgr","get","then","datahandler","getAccessToken","at_mgr","expect","toBe","update","page_access_token","data","readJsonSync","toEqual","load","afterAll","removeSync"],"mappings":";;AAAA;;;;AAEA;;;;AACA;;;;;;AAEAA,KAAKC,IAAL,CAAU,iBAAV,EAA6B,YAAM;AACjC,SAAO;AACLC,oBAAgB,EADX;AAELC,2BAAuB;AAFlB,GAAP;AAID,CALD;;AAOAC,UAAU,YAAM;AACd,oBAAGC,aAAH,CAAiB,mBAASF,qBAA1B;AACD,CAFD;;AAIAG,KAAK,KAAL,EAAY,YAAM;AAChB,MAAIC,QAAQ,IAAZ;AACA,MAAIC,WAAW,IAAf;AACA,SAAO,sBAAYC,GAAZ,GACJC,IADI,CACC,UAACC,WAAD,EAAiB;AACrBJ,YAAQI,WAAR;AACA,WAAOJ,MAAMK,cAAN,EAAP;AACD,GAJI,EAKJF,IALI,CAKC,UAACG,MAAD,EAAY;AAChBL,eAAWK,MAAX;AACAC,WAAON,SAASC,GAAT,CAAa,OAAb,CAAP,EAA8BM,IAA9B,CAAmC,IAAnC;AACA,WAAOP,SAASQ,MAAT,CAAgB,EAAEC,mBAAmB,OAArB,EAAhB,CAAP;AACD,GATI,EAUJP,IAVI,CAUC,YAAM;AACV,QAAIQ,OAAO,kBAAGC,YAAH,CACN,mBAAShB,qBADH,gCAAX;AAGAW,WAAOI,IAAP,EAAaE,OAAb,CAAqB,EAAEH,mBAAmB,OAArB,EAArB;AACA,WAAOT,SAASa,IAAT,EAAP;AACD,GAhBI,EAiBJX,IAjBI,CAiBC,YAAM;AACVI,WAAON,SAASC,GAAT,CAAa,mBAAb,CAAP,EAA0CW,OAA1C,CAAkD,OAAlD;AACD,GAnBI,CAAP;AAoBD,CAvBD;;AAyBAE,SAAS,YAAM;AACb,oBAAGC,UAAH,CAAc,mBAASpB,qBAAvB;AACD,CAFD","file":"accessToken.js","sourcesContent":["import fs from 'fs-extra';\n\nimport constant from 'common/constant';\nimport DataHandler from 'server/store/DataHandler';\n\njest.mock('common/constant', () => {\n  return {\n    REDISCLOUD_URL: '',\n    LOCAL_FILE_STORE_PATH: './var/data_test_accesstoken',\n  };\n});\n\nbeforeAll(() => {\n  fs.ensureDirSync(constant.LOCAL_FILE_STORE_PATH);\n});\n\ntest('all', () => {\n  let thedh = null;\n  let theatmgr = null;\n  return DataHandler.get()\n    .then((datahandler) => {\n      thedh = datahandler;\n      return thedh.getAccessToken();\n    })\n    .then((at_mgr) => {\n      theatmgr = at_mgr;\n      expect(theatmgr.get('hello')).toBe(null);\n      return theatmgr.update({ page_access_token: '12345' });\n    })\n    .then(() => {\n      let data = fs.readJsonSync(\n        `${constant.LOCAL_FILE_STORE_PATH}/access_token_default.json`,\n      );\n      expect(data).toEqual({ page_access_token: '12345' });\n      return theatmgr.load();\n    })\n    .then(() => {\n      expect(theatmgr.get('page_access_token')).toEqual('12345');\n    });\n});\n\nafterAll(() => {\n  fs.removeSync(constant.LOCAL_FILE_STORE_PATH);\n});\n"]}