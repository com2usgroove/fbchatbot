{"version":3,"sources":["../../server/server.js"],"names":["start","info","JSON","stringify","port","app","process","cwd","use","json","parseInt","env","PORT","get","then","dh","datastoreType","datastore","paths","forEach","initFunc","enableSecureCheckForFollowingRoutes","disableSecureCheckForFollowingRoutes","NODE_ENV","devEndpoints","require","default","Promise","resolve","reject","uri","body","HEROKU_APP_URL","catch","err","server","createServer","listener","listen","address","main","module","_listener","setWebsiteURL","error","message"],"mappings":"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","file":"server.js","sourcesContent":["import bodyParser from 'body-parser';\nimport express from 'express';\nimport 'express-csv';\nimport http from 'http';\nimport request from 'request-promise';\n\nimport constant from 'common/constant';\nimport logger from 'common/logger';\nimport DataHandler from 'server/store/DataHandler';\nimport ExpressHelper from 'server/helper/ExpressHelper';\nimport FBGraphHelper from 'server/helper/FBGraphHelper';\n\nimport authEndpoints from 'server/authEndpoint/index';\nimport noAuthEndpoints from 'server/noAuthEndpoint/index';\nimport checkForAccessTokenMiddleware from 'server/helper/AccessTokenHelper';\n\nlogger.info(`app will run with constant like: ${JSON.stringify(constant, null, 2)}`);\n\nexport function start(port) {\n  const app = ExpressHelper(express(), process.cwd(), logger);\n  app.use(bodyParser.json());\n\n  if (!port) {\n    port = parseInt(process.env.PORT || 5000, 10);\n  }\n\n  return DataHandler.get()\n    .then((dh) => {\n      logger.info(\n        `data handler init as ${dh.datastoreType} ${JSON.stringify(dh.datastore.paths, null, 2)}`,\n      );\n\n      noAuthEndpoints.forEach((initFunc) => {\n        initFunc(app, dh);\n      });\n\n      app.enableSecureCheckForFollowingRoutes(checkForAccessTokenMiddleware(dh));\n      authEndpoints.forEach((initFunc) => {\n        initFunc(app, dh);\n      });\n      app.disableSecureCheckForFollowingRoutes();\n\n      if (process.env.NODE_ENV == 'dev') {\n        const devEndpoints = require('server/devEndpoint/index').default;\n        devEndpoints.forEach((initFunc) => {\n          initFunc(app, dh);\n        });\n      }\n\n      return dh;\n    })\n    .then(() => {\n      return new Promise((resolve, reject) => {\n        if (process.env.NODE_ENV === 'dev') {\n          request.get({\n            uri: `http://localhost:${port+1}/localtunnel`\n          })\n          .then((body) => {\n            constant.HEROKU_APP_URL = body;\n            resolve();\n          })\n          .catch((err) => {\n            reject(err);\n          });\n        } else {\n          resolve();\n        }\n      });\n    })\n    .then(() => {\n      return new Promise((resolve, reject) => {\n        const server = http.createServer(app);\n        let listener = server.listen(port, (err) => {\n          if (err) {\n            reject(err);\n          } else {\n            logger.info(`Your app is listening on port ${listener.address().port}`);\n            if (process.env.NODE_ENV === 'dev') {\n              logger.info(`Please access your server with tunnel:*** ${constant.HEROKU_APP_URL} ***`);\n            }\n            resolve(listener);\n          }\n        });\n      });\n    });\n}\n\nif (require.main === module) {\n  start()\n    .then((_listener) => {\n      FBGraphHelper.setWebsiteURL();\n    }).catch((err) => {\n      logger.error(`Unable to set Website URL: ${err.message}`);\n    });\n}\n"]}